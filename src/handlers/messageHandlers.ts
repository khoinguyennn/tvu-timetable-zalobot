import { ZaloEvent } from '../types/zalo';
import { ZaloBot } from '../lib/ZaloBot';

/**
 * Handle text messages
 */
export async function handleTextMessage(event: ZaloEvent, bot: ZaloBot): Promise<void> {
  const text = event.message.text;
  const chatId = event.message.chat.id;

  if (!text) return;

  console.log(`Received text message from ${event.message.from.display_name} (${chatId}): ${text}`);

  // Basic echo bot functionality
  if (text.toLowerCase().includes('hello') || text.toLowerCase().includes('hi')) {
    await bot.sendMessage(chatId, 'Xin ch√†o! T√¥i l√† Zalo Bot. T√¥i c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n?');
  } else if (text.toLowerCase().includes('help') || text.toLowerCase().includes('gi√∫p')) {
    const helpMessage = `
ü§ñ Zalo Bot Commands:
‚Ä¢ G·ª≠i "hello" ho·∫∑c "hi" ƒë·ªÉ ch√†o h·ªèi
‚Ä¢ G·ª≠i "help" ƒë·ªÉ xem h∆∞·ªõng d·∫´n
‚Ä¢ G·ª≠i "time" ƒë·ªÉ xem th·ªùi gian hi·ªán t·∫°i
‚Ä¢ G·ª≠i "echo [text]" ƒë·ªÉ bot l·∫∑p l·∫°i tin nh·∫Øn
    `;
    await bot.sendMessage(chatId, helpMessage.trim());
  } else if (text.toLowerCase().includes('time') || text.toLowerCase().includes('th·ªùi gian')) {
    const currentTime = new Date().toLocaleString('vi-VN', {
      timeZone: 'Asia/Ho_Chi_Minh'
    });
    await bot.sendMessage(chatId, `‚è∞ Th·ªùi gian hi·ªán t·∫°i: ${currentTime}`);
  } else if (text.toLowerCase().startsWith('echo ')) {
    const echoText = text.substring(5);
    await bot.sendMessage(chatId, `üîÑ Echo: ${echoText}`);
  }
}

/**
 * Handle image messages
 */
export async function handleImageMessage(event: ZaloEvent): Promise<void> {
  const chatId = event.message.chat.id;
  const userName = event.message.from.display_name;
  console.log(`Received image message from ${userName} (${chatId})`);
  
  // Kh√¥ng c·∫ßn g·ª≠i ph·∫£n h·ªìi khi nh·∫≠n ·∫£nh
}

/**
 * Handle sticker messages
 */
export async function handleStickerMessage(event: ZaloEvent): Promise<void> {
  const chatId = event.message.chat.id;
  const userName = event.message.from.display_name;
  console.log(`Received sticker message from ${userName} (${chatId})`);
  
  // Kh√¥ng c·∫ßn g·ª≠i ph·∫£n h·ªìi khi nh·∫≠n sticker
}

/**
 * Handle location messages
 */
export async function handleLocationMessage(event: ZaloEvent): Promise<void> {
  const chatId = event.message.chat.id;
  const userName = event.message.from.display_name;
  console.log(`Received location message from ${userName} (${chatId})`);
  
  // Kh√¥ng c·∫ßn g·ª≠i ph·∫£n h·ªìi khi nh·∫≠n location
}

/**
 * Handle file messages
 */
export async function handleFileMessage(event: ZaloEvent): Promise<void> {
  const chatId = event.message.chat.id;
  const userName = event.message.from.display_name;
  console.log(`Received file message from ${userName} (${chatId})`);
  
  // Kh√¥ng c·∫ßn g·ª≠i ph·∫£n h·ªìi khi nh·∫≠n file
}

/**
 * Handle audio messages
 */
export async function handleAudioMessage(event: ZaloEvent): Promise<void> {
  const chatId = event.message.chat.id;
  const userName = event.message.from.display_name;
  console.log(`Received audio message from ${userName} (${chatId})`);
  
  // Kh√¥ng c·∫ßn g·ª≠i ph·∫£n h·ªìi khi nh·∫≠n audio
}

/**
 * Handle video messages
 */
export async function handleVideoMessage(event: ZaloEvent): Promise<void> {
  const chatId = event.message.chat.id;
  const userName = event.message.from.display_name;
  console.log(`Received video message from ${userName} (${chatId})`);
  
  // Kh√¥ng c·∫ßn g·ª≠i ph·∫£n h·ªìi khi nh·∫≠n video
}
